# landing-page/nginx.conf
server {
	listen 80;
	listen [::]:80;
    	server_name me-ap.com www.me-ap.com;
    
    # This will handle the SSL redirect
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name me-ap.com www.me-ap.com;

    ssl_certificate /etc/letsencrypt/live/me-ap.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/me-ap.com/privkey.pem;
    
    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    
    location / {
        proxy_pass http://frontend:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto $scheme;
    }
}

server {
    listen 443 ssl http2;
    server_name dashboard.me-ap.com;

    ssl_certificate /etc/letsencrypt/live/me-ap.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/me-ap.com/privkey.pem;

    location / {
        proxy_pass http://superset:8088;  # Use the service name from Superset's docker-compose
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}
